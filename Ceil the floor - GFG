std::pair<int, int> getFloorAndCeil(int arr[], int n, int x) {
    // Sort the array
    std::sort(arr, arr + n);

    // Initialize floor and ceil results
    int floor = -1;
    int ceil = -1;

    // Floor search
    int low = 0;
    int high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] <= x) {
            floor = arr[mid];
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    // Ceil search
    low = 0;
    high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] >= x) {
            ceil = arr[mid];
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }

    // Return the results as a pair
    return std::make_pair(floor, ceil);
}
